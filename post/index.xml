<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Jian CUI Ph.D.</title>
    <link>/post/</link>
    <description>Recent content in Posts on Jian CUI Ph.D.</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright © by Jian Cui</copyright>
    <lastBuildDate>Thu, 17 Sep 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Tim&#39;s homework 5 performed with R</title>
      <link>/2020/09/17/hmwk5/</link>
      <pubDate>Thu, 17 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/09/17/hmwk5/</guid>
      <description>1. Obtain the data and read it into a data frameAfter skimming the file, I have got two strategies to read the file into a data frame.
From the file, the none data parts are labeled with “!”, such as below links [1:3], so to get rid of these parts, the remaining are the data requested.
Idea: Before and after the data part, two sentences are containing “matrix_table_begin/end” (following lines [5:6]).</description>
    </item>
    
    <item>
      <title>Tim&#39;s homework 3 performed with R</title>
      <link>/2020/09/08/tim-s-homework-3-performed-with-r/</link>
      <pubDate>Tue, 08 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/09/08/tim-s-homework-3-performed-with-r/</guid>
      <description>How many times do you expect you will have to toss an unbiased coin before it comes up &amp;ldquo;heads&amp;rdquo; twice in a row? How many times do you expect you will need to flip it before it comes up &amp;ldquo;heads&amp;rdquo; immediately followed by &amp;ldquo;tails&amp;rdquo;? Write a program that simulates a string of fair coin tosses. The program should:
 Perform 10000 trials in which a coin is tossed until &amp;ldquo;heads-heads&amp;rdquo; occurs, and 10000 trials in which a coin is tossed until &amp;ldquo;heads-tails&amp;rdquo; occurs.</description>
    </item>
    
    <item>
      <title>Tim&#39;s homework 2 performed with R</title>
      <link>/2020/09/01/tim-s-homework-performed-with-r/</link>
      <pubDate>Tue, 01 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/09/01/tim-s-homework-performed-with-r/</guid>
      <description>In Gödel, Escher, Bach: An Eternal Golden Braid, Douglas Hofstadter describes a property of integers:   We begin with your number, and if it is ODD, we triple it and add 1. If it is EVEN, we take half of it. Then we repeat the process. Call a number which eventually reaches 1 this way a WONDROUS number, and a number which doesn’t, an UNWONDROUS number.
 Write a Python script called wondrous.</description>
    </item>
    
    <item>
      <title>A simple web tool for compound condidates selection</title>
      <link>/2020/08/31/a-simple-web-tool-for-compound-condidates-selection/</link>
      <pubDate>Mon, 31 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/08/31/a-simple-web-tool-for-compound-condidates-selection/</guid>
      <description>This Demo is established with R shiny to looking for some possibilities in drug discovery. Since there is a lot of information need organizing during the analysis and is difficult to perform in a relatively simple way. Therefore, by employing shiny, the whole performance of the analysis result can be shown in a simple interactive way.
if you are interested in the project, please click this link</description>
    </item>
    
    <item>
      <title>R programming for Foundations of Computational Biology V.1</title>
      <link>/2019/10/23/r-programming-for-foundations-of-computational-biology-v-1/</link>
      <pubDate>Wed, 23 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/10/23/r-programming-for-foundations-of-computational-biology-v-1/</guid>
      <description>This handout was generated for Foundations of Computational BiologyCOBB 2009. It introduced the basic R operation and some advanced tricks that help to run your script more efficiently. The handout contains both tutorial and homework.
Introduction Advances:   Very well maintained communities and detailed manuals.
  The Comprehensive R Archive Network (CRAN), a network of FTP and web servers around the world that store identical, up-to-date, versions of code and documentation for R.</description>
    </item>
    
  </channel>
</rss>